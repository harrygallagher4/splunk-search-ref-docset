= Evaluation functions =
Use the evaluation functions to evaluate an expression, based on your events, and return a result.  See the 
[[Documentation:Splunk:SearchReference:CommonEvalFunctions#Quick_reference|Quick reference]] section for the supported functions and their syntax.

==Commands==
You can use evaluation functions with the <code>[[Documentation:Splunk:SearchReference:Eval|eval]]</code>, <code>[[Documentation:Splunk:SearchReference:Fieldformat|fieldformat]]</code>, and <code> [[Documentation:Splunk:SearchReference:Where|where]]</code> commands, and as part of evaluation expressions.

==Usage==
* All functions that accept strings can accept literal strings or any field. 
* All functions that accept numbers can accept literal numbers or any numeric field.

===String arguments===
For most evaluation functions, when a string argument is expected, you can specify either an explicit string or a field name. The explicit string is denoted by double quotation marks.  In other words, when the function syntax specifies a string you can specify any expression that results in a string. For example, <code>name + "server"</code>.​

===Nested functions===
You can specify a function as an argument to another function.  

In the following example, the <code>cidrmatch</code> function is used as the first argument in the <code>if</code> function.

<search>... | eval isLocal=if(cidrmatch("123.132.32.0/25",ip), "local", "not local")</search>


The following example shows how to use the <code>true()</code> function to provide a default to the <code>case</code> function.

<search>... | eval error=case(status == 200, "OK", status == 404, "Not found", true(), "Other")</search>


==Quick reference==
The following table is a quick reference for the evaluation functions. This table lists the syntax for each of the supported functions. Use the links in the '''Type of functions''' column for more details and examples.

{| 
!Type of functions
!Supported functions
|-
|[[Documentation:Splunk:SearchReference:ConditionalFunctions|Comparison and Conditional functions]]
|<code>case(X,"Y",...)</code><br>
<code>cidrmatch("X",Y)</code><br>
<code>coalesce(X,...)</code><br>
<code>false()</code><br>
<code>if(X,Y,Z)</code><br>
<code>in(VALUE-LIST)</code><br>
<code>like(TEXT, PATTERN)</code><br>
<code>match(SUBJECT, "REGEX")</code><br>
<code>null()</code><br>
<code>nullif(X,Y)</code><br>
<code>searchmatch(X)</code><br>
<code>true()</code><br>
<code>validate(X,Y,...)</code><br>
|-
|[[Documentation:Splunk:SearchReference:ConversionFunctions|Conversion functions]]
|<code>printf("format",arguments)</code><br>
<code>tonumber(NUMSTR,BASE)</code><br>
<code>tostring(X,Y)</code><br>
|-
|[[Documentation:Splunk:SearchReference:CryptographicFunctions|Cryptographic functions]]
|<code>md5(X)</code><br>
<code>sha1(X)</code><br>
<code>sha256(X)</code><br>
<code>sha512(X)</code><br>
|-
|[[Documentation:Splunk:SearchReference:DateandTimeFunctions|Date and Time functions]]
|<code>now()</code><br>
<code>relative_time(X,Y)</code><br>
<code>strftime(X,Y)</code><br>
<code>strptime(X,Y)</code><br>
<code>time()</code><br>
|-
|[[Documentation:Splunk:SearchReference:InformationalFunctions|Informational functions]]
|<code>isbool(X)</code><br> 
<code>isint(X)</code><br> 
<code>isnotnull(X)</code><br> 
<code>isnull(X)</code><br> 
<code>isnum(X)</code><br> 
<code>isstr(X)</code><br>
<code>typeof(X)</code><br>
|-
|[[Documentation:Splunk:SearchReference:MathematicalFunctions|Mathematical functions]]
|<code>abs(X)</code><br>
<code>ceiling(X)</code><br> 
<code>exact(X)</code><br> 
<code>exp(X)</code><br> 
<code>floor(X)</code><br> 
<code>ln(X)</code><br> 
<code>log(X,Y)</code><br> 
<code>pi()</code><br> 
<code>pow(X,Y)</code><br> 
<code>round(X,Y)</code><br> 
<code>sigfig(X)</code><br> 
<code>sqrt(X)</code><br>
|-
|[[Documentation:Splunk:SearchReference:MultivalueEvalFunctions|Multivalue eval functions]]
|<code>commands(X)</code><br> 
<code>mvappend(X,...)</code><br> 
<code>mvcount(MVFIELD)</code><br> 
<code>mvdedup(X)</code><br> 
<code>mvfilter(X)</code><br> 
<code>mvfind(MVFIELD,"REGEX")</code><br> 
<code>mvindex(MVFIELD,STARTINDEX,ENDINDEX)</code><br> 
<code>mvjoin(MVFIELD,STR)</code><br> 
<code>mvrange(X,Y,Z)</code><br> 
<code>mvsort(X)</code><br> 
<code>mvzip(X,Y,"Z")</code><br>
|-
|[[Documentation:Splunk:SearchReference:StatisticalFunctions|Statistical eval functions]]
|<code>min(X,...)</code><br> 
<code>max(X,...)</code><br> 
<code>random()</code><br>
|-
|[[Documentation:Splunk:SearchReference:TextFunctions|Text functions]]
|<code>len(X)</code><br> 
<code>lower(X)</code><br> 
<code>ltrim(X,Y)</code><br> 
<code>replace(X,Y,Z)</code><br> 
<code>rtrim(X,Y)</code><br> 
<code>spath(X,Y)</code><br> 
<code>split(X,"Y")</code><br> 
<code>substr(X,Y,Z)</code><br> 
<code>trim(X,Y)</code><br> 
<code>upper(X)</code><br> 
<code>urldecode(X)</code><br>
|-
|[[Documentation:Splunk:SearchReference:TrigandHyperbolicFunctions|Trigonometry and Hyperbolic functions]]
|<code>acos(X)</code><br> 
<code>acosh(X)</code><br> 
<code>asin(X)</code><br> 
<code>asinh(X)</code><br> 
<code>atan(X)</code><br> 
<code>atan2(X,Y)</code><br> 
<code>atanh(X)</code><br> 
<code>cos(X)</code><br> 
<code>cosh(X)</code><br> 
<code>hypot(X,Y)</code><br> 
<code>sin(X)</code><br> 
<code>sinh(X)</code><br> 
<code>tan(X)</code><br> 
<code>tanh(X)</code><br>
|}

== See also ==
'''Topics:''' <br>
[[Documentation:Splunk:SearchReference:CommonStatsFunctions|Statistical and charting functions]]

'''Commands:'''<br>
[[Documentation:Splunk:SearchReference:Eval|eval]] <br>  [[Documentation:Splunk:SearchReference:Fieldformat|fieldformat]] <br>
[[Documentation:Splunk:SearchReference:Where|where]]

== Splunk Answers ==
Have questions? Visit [http://splunk-base.splunk.com Splunk Answers] and search for a specific function or command. 


[[Category:V:Splunk:6.6.0]][[Category:V:Splunk:7.0.0]][[Category:V:SplunkCloud:6.6.0]][[Category:V:SplunkCloud:6.6.1]][[Category:V:Splunk:6.6.2]][[Category:V:Splunk:6.6.1]][[Category:V:SplunkCloud:6.6.2]][[Category:V:Splunk:6.6.3]][[Category:V:Splunk:NightLight]][[Category:V:SplunkCloud:6.6.3]]
